// Лекция 3
#include <iostream>

using std::cout;
using std::cin;

// #define M 3 - лучше так не делать, т.к. М распротраниться на всю программу


int main()
{
                                 /*  Сумма цифр в числе: */

    // Алгоритм распаковки натурального числа:
    int n = 12345;
    int sum = 0; // Инициализация

    while (n > 0) {
        int digit = n % 10;
        sum += digit;
        n /= 10;
    }
    
    cout << sum << "\n";



                               /*  Проверка простоты числа: */
    int x = 5;
    bool isPrime = true;
    for (int d = 2; d <= sqrt(x); d++) { // Считаем до корня числа, т.к. далее корни будут повторяться
        if (x % d == 0) {
            isPrime = false;
            break;
        }
     if (isPrime)
         cout << "Is Prime";
     else
         cout << "Not Prime";
    }


                        /* Поиск максимума в последовательности */

    int N;
    cin >> N;

    /* 1 способ:
    int max = INT_MIN; Однако работает только для int*/

    // 2 способ:
    int max = 0;
    for (int i = 0; i < N; i++) {
        int a;
        cin >> a;
        if (a > max)
            max = a;
    }
    cout << max;


                        /*  Отсортировать по возрастанию n целых чисел (0 < n < 10000) */

    const int M = 10000; // Таким образом М нельзя будет поменять нигде
    int mas[M]; // Массив фиксированной длины (т.е. его длина должна задваться константой) из 10 элементов int (т.е. 4 байта на элемент)
    int digits[M];

    int n; // Таким образом у нас список будет введённой длины, однако оставшаяся оперативная память будет зарезервированной, но не занятой
    cin >> n;

    for (int i = 0; i < n; i++) {
        cin >> mas[i];

        // Вытасиваем первую цифру
        int tmp = mas[i];
        while (tmp > 9)
            tmp /= 10;
        digits[i] = tmp;
        cout << digits[i] << std::endl;
    }


    for (int i = 0; i < n; i++)
        cin >> mas[i]; // Каждый элемент отдельно вводится


    // Сортировка обменами (swap sort):
    // Трегольный цикл, кол-во операций = (n^2)/2
    for (int i = 0; i < n - 1; i++)
        for (int j = i + 1; j < n; j++) // Проходмися по элементам последовательности
            // Сложный ключ:
            if (mas[i] > mas[j]) {
                int tmp = mas[i]; // Обмениваем значения
                mas[i] = mas[j];
                mas[j] = tmp;

                // Другой способ: std::swap(mas[i], mas[j]);
            }

    for (int i = 0; i < n; i++)
        cout << mas[i] << std::endl;


                                 /* Инициализация массива случайными числами: */

    int cont[10] = { 2, 3, 4, 5, 6, 1, 5 };// Инициализация

    srand(time(NULL));
    int cont_rand[1000];

    for (int i = 0; i < 1000; i++) {
        cont_rand[i] = rand(); // Генерация чисел от 0 до 32767
        cont_rand[i] = rand() % 10; // Числа от 0 до 9 (т.к остаток от деления на 10 не может быть больше этого)
        cont_rand[i] = rand() % 100 + 200; // Числа от 200 до 299
    }


                                /* Вызов случайного числа из массива: */

}

